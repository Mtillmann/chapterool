div.offcanvas.offcanvas-bottom#exportDialog(x-ref="exportDialog", style="--bs-offcanvas-height:initial;;min-height:50vh;max-height:100vh")
    div.offcanvas-header
        h5.offcanvas-title Export Chapters
        button.btn-close(data-bs-dismiss="offcanvas")
    div.offcanvas-body.pt-0.d-flex.flex-column
        div.container-xl.flex-grow-1.d-flex.flex-column
            div.row.flex-grow-1
                div.col-12.d-flex.flex-column.flex-grow-1
                    ul.nav.nav-tabs.mb-2(style="--bs-nav-link-padding-x:0.5rem")
                        li.nav-item
                            a.nav-link(:class="{active : exportSettings.type === 'chaptersjson'}", href="#", @click.stop.prevent="updateExportContent('chaptersjson')")
                                i.bi.bi-filetype-json
                                |
                                | chapters.json
                        li.nav-item
                            a.nav-link(:class="{active : exportSettings.type === 'webvtt'}", href="#", @click.stop.prevent="updateExportContent('webvtt')")
                                i.bi.bi-filetype-txt
                                |
                                | WebVTT
                        li.nav-item
                            a.nav-link(:class="{active : exportSettings.type === 'youtube'}", href="#", @click.stop.prevent="updateExportContent('youtube')")
                                i.bi.bi-youtube
                                |
                                | Youtube
                        li.nav-item
                            a.nav-link(:class="{active : exportSettings.type === 'matroskaxml'}", href="#", @click.stop.prevent="updateExportContent('matroskaxml')")
                                i.bi.bi-filetype-xml
                                |
                                | Matroska
                        li.nav-item
                            a.nav-link(:class="{active : exportSettings.type.slice(0,8) === 'mkvmerge'}", href="#", @click.stop.prevent="updateExportContent('mkvmergexml')")
                                i.bi.bi-filetype-xml
                                |
                                | MKVMerge
                        li.nav-item
                            a.nav-link(:class="{active : exportSettings.type === 'ffmetadata'}", href="#", @click.stop.prevent="updateExportContent('ffmetadata')")
                                i.bi.bi-file-binary
                                |
                                | FFMetadata
                    div.row.flex-grow-1
                        div.col-8.d-flex.flex-column
                            textarea.flex-grow-1.overflow-visible.form-control(:value="exportContent", readonly, x-ref="outputTextarea")
                            div.mt-2.d-flex.justify-content-evenly
                                button.btn.btn-outline-primary(@click="download")
                                    i.bi.bi-download
                                    |
                                    | Download
                                button.btn.btn-outline-primary(
                                    @click="downloadZip"
                                    x-show="exportSettings.type === 'chaptersjson' && exportSettings.hasImages"
                                )
                                    i.bi.bi-file-zip
                                    |
                                    | Zip w/ Images
                                button.btn.btn-outline-primary(@click="copyToClipboard")
                                    i.bi.bi-clipboard
                                    |
                                    | Copy to Clipboard
                        div.col-4
                            div.mb-2.form-check.form-switch(x-show="exportSettings.supportsPretty")
                                input#exportPretty.form-check-input(@change="updateExportContent()",type="checkbox", x-model="exportSettings.pretty")
                                label.form-check-label(for="exportPretty") pretty print
                            template(x-if="exportSettings.type === 'chaptersjson'")
                                div
                                    div.form-check.form-switch.mb-2
                                        input.form-check-input#writeToc(@change="updateExportContent()",type="checkbox", x-model="exportSettings.writeRedundantToc")
                                        label.form-check-label(for="writeToc") write all TOC attributes
                                    div.form-check.form-switch.mb-2
                                        input.form-check-input#writeEndTimes(@change="updateExportContent()",type="checkbox", x-model="exportSettings.writeEndTimes")
                                        label.form-check-label(for="writeEndTimes") write endTime Attributes
                                    div(x-show="exportSettings.canUseImagePrefix")
                                        label.form-label.small(for="imagePrefix") image URI prefix
                                        input.form-control#imagePrefix(@input="updateExportContent()", x-model="exportSettings.imagePrefix")
                            template(x-if="exportSettings.type.slice(0,8) === 'mkvmerge'")
                                div.btn-group.btn-group-sm(role="group")
                                    input#formatMKVMergeXML.btn-check(type="radio",name="mkvformat",value="mkvmergexml", x-model="exportSettings.type", @change="updateExportContent()")
                                    label.btn.btn-outline-primary(for="formatMKVMergeXML") XML
                                    input#formatMKVMergeSimple.btn-check(type="radio",name="mkvformat",value="mkvmergesimple", x-model="exportSettings.type", @change="updateExportContent()")
                                    label.btn.btn-outline-primary(for="formatMKVMergeSimple") simple